{"version":3,"sources":["helpers/notes.js","components/panel/panelParts.js","components/functions/selectedNote.js","components/functions/functions.js","components/panel/panel.js","components/textarea/textareaclass.js","App.js","index.js"],"names":["notes","id","title","body","i","identifyer","getNotes","localStorage","getItem","setItem","undefined","length","push","updateStorage","console","error","UpdateNoteFromStorage","createNote","res","Math","max","apply","map","o","note","log","e","data","clear","JSON","stringify","parse","Userinfo","name","desc","onClick","className","clickedId","arr","prop","findBody","match","find","deleteCurrent","refreshPanel","reload","indexToDelete","findIndex","splice","deleteNote","ToastsStore","doneTyping","a","document","getElementsByClassName","indexToUpdate","updateNote","innerHTML","slice","pop","Panel","refreshList","success","querySelectorAll","element","style","backgroundColor","getElementById","Textarea","placeholder","value","contentEditable","onInput","App","useState","setNotes","useEffect","store","rootElement","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b97f3de3.chunk.js","sourcesContent":["let notes = [\n  { id: 1, title: \"New note\", body: \"\" }\n];\nlet i = 0;\n\nexport let identifyer = {id: 0};\n\nexport function getNotes() {\n  if(i === 0){\n    UpdateNoteFromStorage()\n    i = 1;\n  }\n  return notes;\n}\n\nexport function createNote(title, body) {\n  var res = Math.max.apply(Math,notes.map(function(o){return o.id;}))\n  if (notes.length === 0){\n    res=0;\n  }\n  const note = {\n    id: res + 1,\n    title,\n    body\n  };\n  identifyer.id = notes.length + 1;\n  notes.push(note);\n  console.log(notes);\n  updateStorage(\"set\", notes);\n  return note;\n  // neat\n}\n\nexport function updateNote(id, title, body) {\n  const indexToUpdate = notes.findIndex((note) => note.id === id)\n  const note = {\n    id,\n    title,\n    body,\n  }\n  notes.splice(indexToUpdate, 1, note)\n  updateStorage(\"set\", notes);\n  return notes\n}\n\nexport function deleteNote(id) {\n  const indexToDelete = notes.findIndex((note) => note.id === id)\n  notes.splice(indexToDelete, 1)\n  updateStorage(\"set\", notes);\n  return true\n}\nexport const updateStorage = (e, data) => {\n  if(e === \"set\"){\n      localStorage.clear();\n      localStorage.setItem('LesoNotes', JSON.stringify(data));\n  }else if(e === \"get\"){\n    return JSON.parse(localStorage.getItem('LesoNotes'))\n  }\n}\n\nexport function UpdateNoteFromStorage() {\n  if (localStorage.getItem(\"LesoNotes\") === null) {\n    localStorage.setItem(\"LesoNotes\", \"[]\");\n  }\n  if(notes !== undefined){\n    notes.length = 0;\n    notes.push(...updateStorage(\"get\"))\n    console.error(updateStorage(\"get\"))\n    }\n}","import React from \"react\";\r\nexport default function Userinfo({ name, desc, id, onClick }) {\r\n  return (\r\n    <>\r\n      <div id={id} onClick={onClick} className=\"panelNote\">\r\n        <div className=\"panelNoteTitle\">{name}</div>\r\n        {desc}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export let clickedId;\n\nexport function selectNote(e) {\n  [...document.querySelectorAll(\".panelNote\")].map((element) => {\n    element.style.backgroundColor = \"white\";\n  });\n  clickedId = e.id;\n  if(e.body !== undefined){ document.getElementsByClassName(\"writableArea\")[0].innerHTML = e.body;}\n  document.getElementById(e.id).style.backgroundColor = \"gray\";\n}\n","import { createNote, getNotes, updateNote, deleteNote, updateStorage } from \"../../helpers/notes\";\nimport {ToastsStore} from 'react-toasts';\nimport {clickedId } from \"../functions/selectedNote\"\nconst findByPropInObjectArray = (arr, prop) => match => arr.find(e => e[prop] === match);\nconst findBody = findByPropInObjectArray(getNotes(), \"body\");\n\nexport const createNew = (refreshPanel, reload) => {\n      createNote(\"New note\", \"\");\n      if(reload){\n        refreshPanel();\n      }\n      updateStorage(\"set\", getNotes());\n      ToastsStore.success(\"Successfully created note!\")\n}\n\nexport const deleteCurrent = (refreshPanel, reload) => {\n      deleteNote(clickedId)\n      if(reload){\n        refreshPanel();\n      }\n      console.log(\"Note run\")\n      ToastsStore.error(\"Deleted note!\")\n}\n\nconst doneTyping = (refreshPanel) => {\n  let a = document.getElementsByClassName(\"writableArea\")[0];\n    if(clickedId !== null){\n      updateNote(clickedId, a.innerHTML.slice(0, 20), a.innerHTML)\n    }else{\n      createNote(a.innerHTML, a.innerHTML);\n      findBody(getNotes().pop().body === a.innerHTML)\n      // selectNote(identifyer);\n    }\n    refreshPanel();\n    // console.log(getNotes().pop().body === undefined)\n  \n}\nexport const whentyping = (refreshPanel, a)=>{\n\n  doneTyping(refreshPanel)\n}\n","import React from \"react\";\r\nimport PanelParts from \"./panelParts\";\r\nimport { createNew } from \"../functions/functions\";\r\nimport { selectNote } from \"../functions/selectedNote\";\r\nimport \"./panel.css\";\r\nexport default function Panel({\r\n  name,\r\n  desc,\r\n  id,\r\n  onClick,\r\n  notes,\r\n  refreshList\r\n}) {\r\n\r\n\r\n  return (\r\n    <div className=\"panel\" onClick={refreshList}>\r\n      <span>Saved notes</span>\r\n      <button onClick={() => createNew(refreshList, true)}>Create new</button>\r\n      { notes.map((note) => (\r\n        <PanelParts\r\n          onClick={() => selectNote(note)}\r\n          name={note.title}\r\n          desc={note.desc}\r\n          id={note.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./textarea.css\";\r\nimport { whentyping, deleteCurrent } from \"../functions/functions\";\r\n\r\nexport default function Textarea({\r\n  id,\r\n  placeholder,\r\n  value,\r\n  refreshList,\r\n  notes\r\n}) {\r\n  return (\r\n    <>\r\n    <div onClick={() => deleteCurrent(refreshList, true)} className=\"trash\"></div>\r\n    <div className=\"textarea\">\r\n      <div\r\n        id=\"text\"\r\n        className=\"writableArea\"\r\n        placeholder={placeholder}\r\n        contentEditable=\"true\"\r\n        onInput={() => whentyping(refreshList)}\r\n      ></div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { getNotes } from \"./helpers/notes.js\";\nimport \"./styles.css\";\nimport PanelParts from \"./components/panel/panel\";\nimport Textarea from \"./components/textarea/textareaclass\";\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nexport default function App() {\n  if (localStorage.getItem(\"LesoNotes\") === null) {\n    localStorage.setItem(\"LesoNotes\", \"[]\");\n  }\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const notes = getNotes;\n    setNotes(notes);\n  }, [setNotes]);\n\n  const reload = () => {\n    const notes = getNotes;\n    setNotes([...notes()]);\n  };\n\n  return (\n    <div className=\"Layout\">\n      <PanelParts\n        notes={notes}\n        name=\"SandCastle\"\n        desc=\"Rolling around..\"\n        refreshList={reload}\n        id={1}\n      />\n      <Textarea refreshList={reload} placeholder=\"Write something\" />\n      <ToastsContainer store={ToastsStore}/>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}